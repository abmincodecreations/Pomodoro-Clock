{"version":3,"sources":["audio/Beepaudio.wav","App.js","reportWebVitals.js","index.js"],"names":["song","Audio","BeepAudio","SetTimer","props","className","tittle","onClick","handleDecrease","count","handleIncrease","App","handlePlayPause","state","isplaying","clearInterval","loop","setState","setInterval","clockCount","currentTimer","breakCount","sessionCount","play","handleReset","reset","pause","currentTime","handleBreakDecrease","handleBreakIncrease","handleSessionDecrease","handleSessionIncrease","componentWillUnmount","convertTime","minutes","Math","floor","seconds","undefined","this","breakProps","sessionProps","href","class","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f1cf11b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Beepaudio.372995a9.wav\";","\nimport './App.css';\nimport React from 'react';\nimport BeepAudio from './audio/Beepaudio.wav'\n\nconst song = new Audio(BeepAudio);\n\nconst SetTimer=(props)=>(\n  <div className=\"timer-container\">\n    <h3>{props.tittle}</h3>\n    <div className=\"flex actions-wrpper regultors\">\n      <button onClick={props.handleDecrease}><i className=\"fas fa-minus\"></i></button>\n      <span>{props.count}</span>\n      <button onClick={props.handleIncrease} ><i className=\"fas fa-plus\"></i></button>\n    </div>\n  </div>\n  );\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.loop=undefined;\n    this.state = {\n      breakCount:5,\n      sessionCount:25,\n      clockCount:25*60,\n      currentTimer:'Session',\n      isplaying:false,\n      loop: undefined,\n      reset:false,\n    };\n  }\n\nhandlePlayPause=()=>{\n  const {isplaying}=this.state;\n  if(isplaying){\n    clearInterval(this.loop);\n    this.setState({\n      isplaying:false,\n    });\n  }else{\n    this.setState({\n      isplaying:true,\n    });\n    this.loop=setInterval(() => {\n      const {clockCount , currentTimer , breakCount,  sessionCount }=this.state;\n      \n      if(clockCount===0){\n        this.setState({\n         currentTimer: (currentTimer==='Session')? 'Break' :'Session',\n         clockCount : (currentTimer==='Session')?(breakCount*60):(sessionCount*60)\n        });\n       \n        song.play();\n      }else{\n        this.setState({\n          clockCount:clockCount-1\n         });\n      }\n    },1000);\n  }\n}\nhandleReset = ()=>{\n    this.setState({\n      breakCount:5,\n      sessionCount:25,\n      clockCount:25*60,\n      currentTimer:'Session',\n      isplaying:false,\n      reset: true,\n    });\n\n    setInterval(() => {\n      this.setState({\n        reset: false,\n      });\n    },4000);\n     song.pause();\n     song.currentTime=0;\n\n  clearInterval(this.loop);\n}\nhandleBreakDecrease=()=>{\n  const {breakCount , isplaying ,currentTimer}=this.state;\n  if(breakCount>1){\n    if(!isplaying && currentTimer==='Break'){\n      this.setState({\n        breakCount: breakCount-1,\n        clockCount: (breakCount-1)*60\n      });\n    }\n  }\n}\n\nhandleBreakIncrease=()=>{\n  const { breakCount ,currentTimer ,isplaying }=this.state;\n  if(breakCount<60){\n    if(!isplaying && currentTimer==='Break'){\n      this.setState({\n        breakCount: breakCount+1,\n        clockCount: (breakCount+1)*60\n      });\n    }\n }\n}\nhandleSessionDecrease=()=>{\n  const {sessionCount, isplaying ,currentTimer}=this.state;\n  if(sessionCount>1){\n    if(!isplaying && currentTimer==='Session'){\n      this.setState({\n        sessionCount: sessionCount-1,\n        clockCount: (sessionCount-1)*60\n      });\n    }\n }\n}\n\nhandleSessionIncrease=()=>{\n  const {sessionCount, isplaying ,currentTimer}=this.state;\n  if(sessionCount<60){\n    if(!isplaying && currentTimer==='Session'){\n      this.setState({\n        sessionCount: sessionCount+1,\n        clockCount: (sessionCount+1)*60\n      });\n    }\n }\n}\n\ncomponentWillUnmount=()=>{\n  clearInterval(this.loop);\n}\n\nconvertTime=(count)=>{\n  const minutes= Math.floor(count/60);\n  let seconds=count%60;\n  seconds =seconds < 10 ? ('0'+seconds): seconds;\n  return `${minutes}:${seconds}`;\n}\n  render(){\n    const { \n      breakCount,\n      sessionCount,\n      clockCount,\n      currentTimer,\n      isplaying\n     }=this.state;\n\n    const breakProps ={\n      tittle:'Break Time',\n      count:breakCount,\n      handleDecrease: this.handleBreakDecrease,\n      handleIncrease: this.handleBreakIncrease\n    };\n    const sessionProps ={\n      tittle:'Session Time',\n      count:sessionCount,\n      handleDecrease: this.handleSessionDecrease,\n      handleIncrease: this.handleSessionIncrease\n    };\n\n    return (\n      <div>\n      <a  href=\"https://abmincodecreations.github.io/\"><button class=\"nav-btn\" ><i class=\"fas fa-home\">Home</i></button></a>\n      <div className=\"clock\">\n        <div className=\"flex flex-responsive\">\n          <SetTimer {...breakProps} />\n          <SetTimer {...sessionProps} />\n        </div>\n        <div className=\"clock-box-continer\">\n          <p><emphasize>Pomodoro Clock</emphasize></p>\n          <p>{currentTimer}</p>\n          <span class=\"timer\">{this.convertTime(clockCount)}</span>\n          <div className=\"flex\">\n          <button onClick={this.handlePlayPause}><i className={`fas fa-${ isplaying ? 'pause' :'play'}`}></i></button>\n          <button onClick={this.handleReset} ><i className={`fas fa-sync ${this.state.reset? 'spinMovement' :' '}  `}></i></button>\n          </div>\n        </div>\n      </div>\n         <div className='footer-bar mt-4'>\n            <p className=\"footertext\">\n              <a className=\"no-decoration\" href=\"https://abmincodecreations.github.io/\">\n                &copy;Designed and developed By Abhishek Mishra\n              </a>\n             </p>\n          </div>\n      </div>\n    );\n  }\n  \n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}